Module(
  body=[
    Assign(
      targets=[
        Name(id='a', ctx=Store())],
      value=Call(
        func=Name(id='int', ctx=Load()),
        args=[
          Call(
            func=Name(id='input', ctx=Load()),
            args=[],
            keywords=[])],
        keywords=[])),
    Assign(
      targets=[
        Name(id='b', ctx=Store())],
      value=Call(
        func=Name(id='int', ctx=Load()),
        args=[
          Call(
            func=Name(id='input', ctx=Load()),
            args=[],
            keywords=[])],
        keywords=[])),
    While(
      test=Compare(
        left=Name(id='a', ctx=Load()),
        ops=[
          NotEq()],
        comparators=[
          Name(id='b', ctx=Load())]),
      body=[
        If(
          test=Compare(
            left=Name(id='a', ctx=Load()),
            ops=[
              Gt()],
            comparators=[
              Name(id='b', ctx=Load())]),
          body=[
            Assign(
              targets=[
                Name(id='a', ctx=Store())],
              value=BinOp(
                left=Name(id='a', ctx=Load()),
                op=Sub(),
                right=Name(id='b', ctx=Load())))],
          orelse=[
            Assign(
              targets=[
                Name(id='b', ctx=Store())],
              value=BinOp(
                left=Name(id='b', ctx=Load()),
                op=Sub(),
                right=Name(id='a', ctx=Load())))])],
      orelse=[]),
    Expr(
      value=Call(
        func=Name(id='print', ctx=Load()),
        args=[
          Name(id='a', ctx=Load())],
        keywords=[]))],
  type_ignores=[])
